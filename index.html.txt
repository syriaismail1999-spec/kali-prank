


<!doctype html>
<html lang="ar">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Kali Terminal — SYSTEM ALERT</title>
<style>
  /* مظهر الطرفية الداكنة */
  html,body{height:100%;margin:0}
  body{
    background:#000;
    color:#0f0;
    font-family: "Courier New", Courier, monospace;
    line-height:1.2;
    overflow:hidden;
  }
  #term {
    box-sizing:border-box;
    padding:18px;
    width:100%;
    height:100%;
    white-space:pre-wrap;
    font-size:16px;
    letter-spacing:0.6px;
    display:flex;
    flex-direction:column;
  }
  .line { margin:0 0 6px 0; }
  .prompt { color:#7CFC00; }
  .status { color:#ff6b6b; }
  .progress {
    margin-top:6px;
    width:80%;
    height:10px;
    border:1px solid #0f0;
    position:relative;
    background:transparent;
  }
  .bar {
    height:100%;
    width:0%;
    background:linear-gradient(90deg, rgba(0,255,0,0.08), rgba(0,255,0,0.25));
  }
  #reveal {
    margin-top:auto;
    text-align:center;
    display:none;
    font-size:20px;
    color:#fff;
    background:rgba(0,0,0,0.6);
    padding:10px;
    border:2px solid #0f0;
    width:80%;
    margin-left:auto;margin-right:auto;
  }
  /* زر صغير للخروج من الملء */
  #controls { position:fixed; top:8px; right:10px; z-index:999; }
  .btn {
    background:#111;
    color:#0f0;
    border:1px solid #0f0;
    padding:6px 8px;
    font-family:monospace;
    cursor:pointer;
  }
  /* تأثير Matrix خفيف في الخلفية */
  #matrix {
    position:fixed; inset:0; z-index:0; pointer-events:none; opacity:0.08;
  }
  canvas { width:100%; height:100% }
</style>
</head>
<body>
<div id="matrix"><canvas id="mcanvas"></canvas></div>

<div id="controls">
  <button id="fs" class="btn">ملء الشاشة</button>
  <button id="stop" class="btn">إيقاف الصوت</button>
</div>

<pre id="term" aria-live="polite" role="status"></pre>

<div id="reveal">سحب جميع الدردشات والدردشات المحذوفة </div>

<script>
/* إعداد النصوص التي ستظهر كسطور "اختراق" */
const script = [
  {t: 800, text: "[*] فتح اتصال مع الهدف 192.168.1.34..." },
  {t: 1200, text: ">> محاولة تجاوز الجدار الناري (firewall)..." },
  {t: 1400, text: ">> تحميل وحدات الاستغلال (exploit modules)..." },
  {t: 900,  text: "[+] تهيئة قناة مشفرة..." },
  {t: 1200, text: ">> فحص المنافذ (portscan) : 21,22,80,139,445" },
  {t: 1400, text: ">>> العثور على خدمة ضعيفة: ssh (OpenSSH_7.4)" },
  {t: 1600, text: ">>> تجربة كلمات مرور شائعة..." },
  {t: 900,  text: "[!] تم الوصول إلى الجلسة: shell@target" },
  {t: 1100, text: ">> تنفيذ الأمر: ls -la /home/user" },
  {t: 1000, text: "Documents  Downloads  Pictures  secrets.txt" },
  {t: 1400, text: "[*] تنزيل الملفات الحساسة (simulated)..." },
  {t: 700,  text: "progress: [                    ] 0%" , progress:0},
  /* سنحدث شريط التقدم بعد هذه النقطة */
];

/* مساعدة لطباعة حرف بحرف */
function typeTo(el, text, delay=18){
  return new Promise(resolve=>{
    let i=0;
    const iv = setInterval(()=>{
      el.innerText += text[i] ?? '';
      i++;
      if(i>text.length){
        clearInterval(iv);
        el.innerText += "\n";
        setTimeout(resolve, 200);
      }
    }, delay);
  });
}

const term = document.getElementById('term');

/* طباعة السكربت بالتتابع */
(async function runScript(){
  for(let item of script){
    await new Promise(r => setTimeout(r, item.t));
    if(item.progress!==undefined){
      // ضع سطر تقدم ابتدائي
      term.innerText += item.text + "\n";
    } else {
      await typeTo(term, item.text);
    }
  }

  // إضافة شريط تقدم وهمي متحرك
  const barLine = document.createElement('div');
  barLine.className = 'line';
  barLine.innerHTML = 'progress: ';
  const progressWrap = document.createElement('div');
  progressWrap.className = 'progress';
  const bar = document.createElement('div');
  bar.className = 'bar';
  progressWrap.appendChild(bar);
  term.appendChild(barLine);
  term.appendChild(progressWrap);
  // تمكين التمرير تلقائياً
  term.scrollTop = term.scrollHeight;

  // تدرج شريط التقدم لدرجة واقعية
  for(let p=0; p<=100; p++){
    bar.style.width = p + '%';
    if(p===30) await sleep(700);
    if(p===70) await sleep(600);
    await sleep(80 + Math.random()*120);
    term.scrollTop = term.scrollHeight;
  }

  await sleep(500);
  await typeTo(term, "[!] تشفير الملفات... تم.");
  await sleep(600);
  await typeTo(term, "[!] نقل البيانات إلى 10.0.0.5 ... تم.");
  await sleep(900);
  await typeTo(term, "----");
  await sleep(700);

  // "تفجير" الشاشة برسالة النهاية
  const reveal = document.getElementById('reveal');
  reveal.style.display = 'block';
  term.style.filter = 'blur(0.2px)';
  // أضف سطر يكشف المزحة
  term.innerText += "\n\n[✔] تم الاختراق بنجاج تم تشفير البيانات\n";
  term.scrollTop = term.scrollHeight;
})();

function sleep(ms){ return new Promise(r=>setTimeout(r,ms)); }

/* زر ملء الشاشة */
document.getElementById('fs').addEventListener('click', ()=>{
  const el = document.documentElement;
  if (!document.fullscreenElement) el.requestFullscreen?.();
  else document.exitFullscreen?.();
});

/* مؤثر Matrix بسيط على الخلفية (canvas) */
(function matrixEffect(){
  const c = document.getElementById('mcanvas');
  c.width = innerWidth;
  c.height = innerHeight;
  const ctx = c.getContext('2d');
  const cols = Math.floor(c.width / 14);
  const drops = Array(cols).fill(0);

  function frame(){
    ctx.fillStyle = 'rgba(0,0,0,0.06)';
    ctx.fillRect(0,0,c.width,c.height);
    ctx.fillStyle = '#00FF00';
    ctx.font = '14px monospace';
    for(let i=0;i<drops.length;i++){
      const char = String.fromCharCode(0x30A0 + Math.random()*96);
      ctx.fillText(char, i*14, drops[i]*14);
      if(drops[i]*14 > c.height && Math.random()>0.975) drops[i]=0;
      drops[i]++;
    }
    requestAnimationFrame(frame);
  }
  frame();
  addEventListener('resize', ()=>{ c.width = innerWidth; c.height = innerHeight; });
})();

/* صوت تنبيه اختياري (بسيط ومكرر) */
let audio;
(function playBeep(){
  // إنشاء صوت بسيط عبر WebAudio
  try{
    const ctx = new (window.AudioContext || window.webkitAudioContext)();
    function beep(freq, dur){
      const o = ctx.createOscillator();
      const g = ctx.createGain();
      o.connect(g); g.connect(ctx.destination);
      o.type = 'sine';
      o.frequency.value = freq;
      g.gain.value = 0.02;
      o.start();
      g.gain.exponentialRampToValueAtTime(0.00001, ctx.currentTime + dur/1000);
      o.stop(ctx.currentTime + dur/1000 + 0.02);
    }
    // تشغيل أصوات متدرجة أثناء التقدم
    let p=0;
    const iv = setInterval(()=>{
      beep(300 + Math.random()*1200, 120);
      p++;
      if(p>10) { clearInterval(iv); }
    }, 350);
    audio = { stop: ()=>ctx.close() };
  }catch(e){ audio = null; }
})();

/* زر لإيقاف الصوت لو أراد الضحية */
document.getElementById('stop').addEventListener('click', ()=>{
  if(audio && audio.stop) audio.stop();
});

/* منع السحب/سجل نوافذ بسيطة - لكن لا نغلق الفأرة أو نصوص الإدخال */
document.addEventListener('contextmenu', e=>{ e.preventDefault(); });

</script>
</body>
</html>
